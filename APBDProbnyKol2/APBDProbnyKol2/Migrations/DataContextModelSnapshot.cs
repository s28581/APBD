// <auto-generated />
using System;
using APBDProbnyKol2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APBDProbnyKol2.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APBDProbnyKol2.Models.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlbum"));

                    b.Property<DateTime>("DataWydania")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdWytwornia")
                        .HasColumnType("int");

                    b.Property<string>("NazwaAlbumu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("WytworniaIdWytwornia")
                        .HasColumnType("int");

                    b.HasKey("IdAlbum");

                    b.HasIndex("WytworniaIdWytwornia");

                    b.ToTable("Albumy");
                });

            modelBuilder.Entity("APBDProbnyKol2.Models.Muzyk", b =>
                {
                    b.Property<int>("IdMuzyk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMuzyk"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Pseudonim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMuzyk");

                    b.ToTable("Muzyka");
                });

            modelBuilder.Entity("APBDProbnyKol2.Models.Utwor", b =>
                {
                    b.Property<int>("IdUtwor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtwor"));

                    b.Property<int?>("AlbumIdAlbum")
                        .HasColumnType("int");

                    b.Property<float>("CzasTrwania")
                        .HasColumnType("real");

                    b.Property<int>("IdAlbum")
                        .HasColumnType("int");

                    b.Property<string>("NazwaUtworu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdUtwor");

                    b.HasIndex("AlbumIdAlbum");

                    b.ToTable("Utwory");
                });

            modelBuilder.Entity("APBDProbnyKol2.Models.Wytwornia", b =>
                {
                    b.Property<int>("IdWytwornia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWytwornia"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdWytwornia");

                    b.ToTable("Wytwornie");
                });

            modelBuilder.Entity("MuzykUtwor", b =>
                {
                    b.Property<int>("MuzycyIdMuzyk")
                        .HasColumnType("int");

                    b.Property<int>("UtworyIdUtwor")
                        .HasColumnType("int");

                    b.HasKey("MuzycyIdMuzyk", "UtworyIdUtwor");

                    b.HasIndex("UtworyIdUtwor");

                    b.ToTable("MuzykUtwor");
                });

            modelBuilder.Entity("APBDProbnyKol2.Models.Album", b =>
                {
                    b.HasOne("APBDProbnyKol2.Models.Wytwornia", null)
                        .WithMany("Albums")
                        .HasForeignKey("WytworniaIdWytwornia");
                });

            modelBuilder.Entity("APBDProbnyKol2.Models.Utwor", b =>
                {
                    b.HasOne("APBDProbnyKol2.Models.Album", null)
                        .WithMany("Utwors")
                        .HasForeignKey("AlbumIdAlbum");
                });

            modelBuilder.Entity("MuzykUtwor", b =>
                {
                    b.HasOne("APBDProbnyKol2.Models.Muzyk", null)
                        .WithMany()
                        .HasForeignKey("MuzycyIdMuzyk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBDProbnyKol2.Models.Utwor", null)
                        .WithMany()
                        .HasForeignKey("UtworyIdUtwor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APBDProbnyKol2.Models.Album", b =>
                {
                    b.Navigation("Utwors");
                });

            modelBuilder.Entity("APBDProbnyKol2.Models.Wytwornia", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
